import numpy as np

class Card:

    def __init__(self, suit=1, rank=2):
        if suit < 1 or suit > 4:

            print("invalid suit, setting to 1")
        self.suit = suit
        self.rank = rank

    def value(self):


        """ we want things order primarily by rank then suit """

        return self.suit + (self.rank-1)*14




    # we include this to allow for comparisons with < and > between cards 



    def __lt__(self, other):
        return self.value() < other.value()


    def __unicode__(self):

        suits = [u"\u2660",  # spade    value = 1
                 u"\u2665",  # heart    value = 2
                 u"\u2666",  # diamond  value = 3
                 u"\u2663"]  # club     value  = 4

        r = str(self.rank)
        if self.rank == 11:

            r = "J"
            
        elif self.rank == 12:

            r = "Q"

        elif self.rank == 13:

           r = "K"


        elif self.rank == 14:

            r = "A"

         
        return r +':'+suits[self.suit-1]

    def __str__(self):
    
        return self.__unicode__()  #.encode('utf-8')

import random

class Deck:

    """ the deck is a collection of cards """

    def __init__(self):

        self.nsuits = 4
        self.nranks = 13
        self.minrank = 2
        
        self.maxrank = self.minrank + self.nranks - 1

        self.cards = []

        for rank in range(self.minrank,self.maxrank+1):

            for suit in range(1, self.nsuits+1):
              current_card = Card(rank=rank, suit=suit)
              self.cards.append(current_card)


    def shuffle(self):#Randomizes the deck
        random.shuffle(self.cards)

    def get_cards(self, num=1):


        hand = []

        for n in range(num):
            hand.append(self.cards.pop())

        return hand
    
    def get_card(self):

        return self.cards.pop()

    def __str__(self):

        string = ""

        for c in self.cards:

            string += str(c) + " "
        return string
    

class BlackJack(object):
    def __init__(self):
        self.mydeck = Deck()
        self.mydeck.shuffle()
        self.hands = []
        self.total_points=[]       #create a list to store total_point
         #of cards for each player
        num_hands =  int(input ('Enter number of hands to play: '))
             
        while (num_hands < 2 or num_hands > 6):#Rejects input if not within bounds of 2 or 6 and asks again

            print('Try different number of hands')

            num_hands = int( input ('Enter number of hands to play: ') )
        players = {}    #Generates dictionary for player hands
        
        #Below is an input from players for what they want to be the winning score from all rounds    
        max_score = int(input("Please enter the number of points to win: "))
        score = np.zeros(num_hands)#Stores scores for each player
        while max(score)< max_score:#Keeps playing until a max score is reached
            self.mydeck = Deck()
            self.mydeck.shuffle()#Makes and shuffles a new deck for each round
            
            for i in range (num_hands):    #Distributes the first two cards to each player
            
                players[i] = self.mydeck.get_cards(2)       
                
            total = np.zeros(num_hands)
            for i in range(num_hands):  #Each person goes in numerical order
    
                
                total[i] = 0
                for d in players[i]:
                    if d.rank<=10:
                        total[i]+=d.rank
                    elif d.rank==11 or d.rank == 12 or d.rank==13:
                        total[i]+= 10
                    elif d.rank==14:
                        total[i]+= 11
                for c in players[i]: print(c)
                if total[i] == 21:
                    if len(players[i])==2:
                        hand = sorted(players[i])
                        if hand[0].rank==10 or hand[0].rank ==11 or hand[0].rank == 12 or hand[0].rank==13:
                            if hand[1].rank ==14:
                                print("You got Blackjack! Type stop and you win.")
                                total[i] = 22
                print("Player " + str(i+1) + "'s current hand is:",int(total[i]))
                if total[i] <= 10:
                    print("Your current total is low, we would recommend taking a hit.")
                elif total[i] > 10 and total[i] <= 15:
                    print("Taking a hit now MAY be a good idea here.")
                elif total[i] >15 and total[i] <= 20:
                    print("Warning! Taking a hit would be inadvisable here!")
                if total[i] <21:    
                    hit_stop = input("Do you wish to hit or stop? ") 
                if total[i]==22:
                    hit_stop = "stop"
                while hit_stop != "stop":   
                    if hit_stop == "hit":
                        total[i] = 0
                        hit = self.mydeck.get_cards(1)#Possibly use statistical analysis to recommend hit or miss
                        players[i] += hit
                        for c in players[i]: 
                            print(c)
                            if c.rank<=10:
                                total[i]+=c.rank
                            elif c.rank==11 or c.rank == 12 or c.rank==13:
                                total[i]+= 10
                            elif c.rank==14:
                                total[i]+= 11
                        if total[i] > 21:
                            
                            print("Player "+str(i+1)+"'s value is over 21. You lose!")
                            
                            total[i] = 0
                            break
                        if total[i] == 21:
                            print("Player "+str(i+1)+"'s final value is 21")
                            break
                        print("Player "+str(i+1)+", your current sum is ",int(total[i]))
                        
                        if total[i] <= 10:
                            print("Your current total is low, we would recommend taking a hit.")
                        elif total[i] > 10 and total[i] <= 15:
                            print("Taking a hit now MAY be a good idea here.")
                        elif total[i] >15 and total[i] <= 20:
                            print("Warning! Taking a hit would be inadvisable here!")
                        hit_stop = input("Do you wish to hit or stop? ")
            
            for i in range(len(total)): print("Player " + str(i+1)+"'s points this round are: ",int(total[i]))            
           # score +=1   
            #print(max(total))
           # print(np.argmax(total)) #pulls out index of max value
            #for i in len(total):
                
                #if total[i] == max(total):
                   # score[i]+=1
            for i in range(len(total)):#Behind the scenes code to determine a winner in the case of a tie
                for j in range(len(total)):
                      #Look to add a case where it removes the lowest variable
                    if total[i] == total[j]==max(total) and total[i]!=0 and total[j]!=0 and i!=j:
                        print("Players "+str(i+1)+" and "+str(j+1)+" have tied. Rank and Suit will now be checked.")
                        max_i = 0
                        for c in players[i]:
                            if c.rank>max_i:
                                max_i = c.rank
                        max_j = 0
                        for e in players[j]:
                            if e.rank>max_j:
                                max_j = e.rank
                        
                        if max_i == max_j:
                            max_i_suit = 5
                            for c in players[i]:
                                if c.suit<max_i_suit:
                                    max_i_suit = c.suit
                            max_j_suit = 5
                            for e in players[j]:
                                if e.suit<max_j_suit:
                                    max_j_suit = e.suit
                            if max_i_suit < max_j_suit:
                                total[i]+=1
                                print("Player "+str(i+1)+" has the higher suit.")
                                break
                            else:
                                total[j]+=1
                                print("Player "+str(j+1)+" has the higher suit.")
                                break
                        elif max_i > max_j:
                            total[i]+=1
                            print("Player "+str(i+1)+" has the higher rank.")
                            break
                        else:
                            total[j]+=1
                            print("Player "+str(j+1)+" has the higher rank.")
                            break
                                
            if max(total)==0:
                print("There are no winners this round.")
            else:
                score[np.argmax(total)]+=1
                print("Player "+str(np.argmax(total)+1)+" wins the round!")
                for i in range(len(score)): print("Player " + str(i+1)+"'s score is: ",int(score[i]))
        print("Player "+str(np.argmax(score)+1)+" wins the game!")    
                            
                        
                        
    
        
        
            
            
            
        
        
def main():
    game_type = input('Select the game you wish to play: ')
    if game_type == "Blackjack" or game_type == "blackjack" or game_type == "BlackJack":
        BlackJack()
main()
